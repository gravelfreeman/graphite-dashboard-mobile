# CREDITS GOES TO LOVELACE-MINIMALIST-UI PROJECT https://ui-lovelace-minimalist.github.io/UI

# This first part of the code defines the room card template which you can use in your dashboards.

button_card_templates:
  card_room:
    variables:
      label_use_temperature: true
      label_use_brightness: false
    double_tap_action:
      action: call-service
      service: input_select.select_option
      service_data:
        option: '[[[ return variables.ulm_input_select_option ]]]'
        entity_id: '[[[ return variables.ulm_input_select ]]]'
    color: var(--rgb-grey-color)
    size: 45%
    aspect_ratio: 1/1
    show_icon: true
    show_label: true
    show_name: true
    icon: mdi:sofa-single
    label: |-
      [[[
        let label = '';
        if (variables.label_use_temperature) {  
          label += (entity?.attributes?.temperature || entity?.state || '-') + (entity?.attributes?.unit_of_measurement || 'Â°C');
        }
        if (variables.humidity) {  

          if(label != '') {
            label += ' / ';
          }

          label += (states[variables.humidity].state || '-') + (variables?.humidity?.unit_of_measurement || '%');
        }

        return label;
      ]]]
    state:
      - value: unavailable
        styles:
          custom_fields:
            notification:
              - border-radius: 50%
              - border: 2px solid var(--card-background-color)
              - width: 24.5px
              - height: 24.5px
              - position: absolute
              - left: 50%
              - top: 50%
              - transform: translate(-50%,-50%)
              - margin-top: 35%
              - margin-left: '-35%'
              - line-height: 0
              - display: grid
              - background-color: '[[[ return ''rgba(var(--rgb-red-color),1)''; ]]]'
    styles:
      icon:
        - color: rgba(var(--rgb-grey-color),0.2)
      label:
        - justify-self: start
        - align-self: start
        - font-weight: bold
        - font-size: 14px
        - filter: opacity(40%)
        - margin-left: 12px
        - max-width: >-
            [[[ return `calc(100% - (12px + ${!variables?.entity_1 &&
            !variables?.entity_2 ? 5 : 0}px))`; ]]]
        - text-overflow: ellipsis
        - overflow: hidden
        - margin-top: '[[[ return !variables?.entity_1 ? ''-24%'' : ''-10%''; ]]]'
      name:
        - justify-self: start
        - align-self: end
        - font-weight: bold
        - font-size: 18px
        - margin-left: 12px
        - margin-bottom: >-
            [[[ return !variables?.entity_1 ? (!variables?.entity_2 ? '15.8%' :
            '24%') : '10%'; ]]]
        - max-width: >-
            [[[ return `calc(100% - (12px + ${!variables?.entity_2 ? 5 :
            0}px))`; ]]]
        - text-overflow: ellipsis
        - overflow: hidden
      state:
        - justify-self: start
        - font-weight: bold
        - font-size: 12px
        - filter: opacity(40%)
        - margin-left: 6px
      img_cell:
        - background-color: rgba(var(--rgb-grey-color),0.05)
        - border-radius: 50%
        - width: 75%
        - height: 75%
        - max-width: none
        - max-height: none
        - position: absolute
        - left: 50%
        - top: 50%
        - transform: translate(-50%,-50%)
        - margin-top: 25%
        - margin-left: '-25%'
      grid:
        - grid-template-areas: >-
            [[[ return !variables?.entity_1 ? (!variables?.entity_2 ? `'n n n'
            'l l i3' 'i i i4'` : `'n n i2' 'l l i3' 'i i i4'`) : `'n n n i1' 'l
            l l i2' 'i i . i3' 'i i . i4'`; ]]]
        - grid-template-columns: >-
            [[[ return !variables?.entity_1 ? '1fr 1fr 1fr' : '1fr 1fr 1fr 1fr';
            ]]]
        - grid-template-rows: >-
            [[[ return !variables?.entity_1 ? '1fr 1fr 1fr' : '1fr 1fr 1fr 1fr';
            ]]]
        - justify-items: center
      card:
        - border-radius: 20px
        - box-shadow: var(--box-shadow)
        - padding: 5px
      custom_fields:
        i1:
          - border-radius: 50%
          - width: 80%
          - height: 80%
          - line-height: 0
          - display: grid
        i2:
          - border-radius: 50%
          - width: 80%
          - height: 80%
          - line-height: 0
          - display: grid
        i3:
          - border-radius: 50%
          - width: 80%
          - height: 80%
          - line-height: 0
          - display: grid
        i4:
          - border-radius: 50%
          - width: 80%
          - height: 80%
          - line-height: 0
          - display: grid
    custom_fields:
      notification: |
        [[[
          if (entity?.state == 'unavailable'){
            return '<ha-icon icon="mdi:exclamation" style="width: 50%; height: 50%; color: var(--primary-background-color);"></ha-icon>';
          }
        ]]]
      i1:
        card:
          type: custom:button-card
          template: |
            [[[
              let templates = [ 'widget_icon_room' ];
              if (variables?.entity_1?.templates?.length) {
                templates.push(...variables.entity_1.templates);
              }
              return templates;
            ]]]
          variables: '[[[ return variables?.entity_1; ]]]'
          icon: >-
            [[[ return variables?.icon ? variables?.icon :
            variables?.entity_1?.icon; ]]]
          state:
            - operator: template
              value: '[[[ return !variables.entity_1; ]]]'
              styles:
                card:
                  - display: none
          entity: '[[[ return variables?.entity_1?.entity_id; ]]]'
          styles:
            card:
              - border: none
      i2:
        card:
          type: custom:button-card
          template: |
            [[[
              let templates = [ 'widget_icon_room' ];
              if (variables?.entity_2?.templates?.length) {
                templates.push(...variables.entity_2.templates);
              }
              return templates;
            ]]]
          variables: '[[[ return variables?.entity_2; ]]]'
          icon: >-
            [[[ return variables?.icon ? variables?.icon :
            variables?.entity_2?.icon; ]]]
          state:
            - operator: template
              value: '[[[ return !variables.entity_2; ]]]'
              styles:
                card:
                  - display: none
          entity: '[[[ return variables?.entity_2?.entity_id; ]]]'
          styles:
            card:
              - border: none
      i3:
        card:
          type: custom:button-card
          template: |
            [[[
              let templates = [ 'widget_icon_room' ];
              if (variables?.entity_3?.templates?.length) {
                templates.push(...variables.entity_3.templates);
              }
              return templates;
            ]]]
          variables: '[[[ return variables?.entity_3; ]]]'
          icon: >-
            [[[ return variables?.icon ? variables?.icon :
            variables?.entity_3?.icon; ]]]
          state:
            - operator: template
              value: '[[[ return !variables.entity_3; ]]]'
              styles:
                card:
                  - display: none
          entity: '[[[ return variables?.entity_3?.entity_id; ]]]'
          styles:
            card:
              - border: none
      i4:
        card:
          type: custom:button-card
          template: |
            [[[
              let templates = [ 'widget_icon_room' ];
              if (variables?.entity_4?.templates?.length) {
                templates.push(...variables.entity_4.templates);
              }
              return templates;
            ]]]
          variables: '[[[ return variables?.entity_4; ]]]'
          icon: >-
            [[[ return variables?.icon ? variables?.icon :
            variables?.entity_4?.icon; ]]]
          state:
            - operator: template
              value: '[[[ return !variables.entity_4; ]]]'
              styles:
                card:
                  - display: none
          entity: '[[[ return variables?.entity_4?.entity_id; ]]]'
          styles:
            card:
              - border: none
  widget_icon_room:
    variables:
      tap_action:
        action: toggle
      hold_action:
        action: more-info
    tap_action:
      action: >-
        [[[ return variables?.tap_action?.action ? variables.tap_action.action :
        'none'; ]]]
      entity: '[[[ return variables.tap_action.entity; ]]]'
      navigation_path: '[[[ return variables.tap_action.navigation_path; ]]]'
      url_path: '[[[ return variables.tap_action.url_path; ]]]'
      service: '[[[ return variables.tap_action.service; ]]]'
      service_data: '[[[ return variables.tap_action.service_data; ]]]'
    hold_action:
      action: >-
        [[[ return variables?.hold_action?.action ? variables.hold_action.action
        : 'none'; ]]]
      entity: '[[[ return variables.hold_action.entity; ]]]'
      navigation_path: '[[[ return variables.hold_action.navigation_path; ]]]'
      url_path: '[[[ return variables.hold_action.url_path; ]]]'
      service: '[[[ return variables.hold_action.service; ]]]'
      service_data: '[[[ return variables.hold_action.service_data; ]]]'
    size: 15px
    color: var(--rgb-grey-color)
    show_icon: true
    show_name: false
    styles:
      icon:
        - width: 50%
        - height: 50%
        - line-height: '0'
        - color: rgba(var(--rgb-grey-color),0.2)
      img_cell:
        - border-radius: 50%
        - background-color: rgba(var(--rgb-grey-color),0.05)
      grid:
        - grid-template-areas: '''i'''
      card:
        - height: 100%
        - box-shadow: none
        - padding: 0px
        - border-radius: 50%

# This part defines the styling you can add to your rooms.

# The first section defines custom color templates based on state for the customizable card icons

  light:
    state:
      - operator: template
        value: '[[[ return states[entity.entity_id].state != ''0''; ]]]'
        styles:
          icon:
            - color: rgba(var(--rgb-amber-color), 1)
          label:
            - color: rgba(var(--primary-text-color),1)
          name:
            - color: rgba(var(--primary-text-color),1)
          img_cell:
            - background-color: rgba(var(--rgb-amber-color), 0.2)
          card:
            - background-color: rgba(var(--rgb-amber-color), ".02")
      - operator: template
        value: '[[[ return states[entity.entity_id].state == ''0''; ]]]'
        styles:
          icon:
            - color: rgb(var(--rgb-disabled-color))
          img_cell:
            - background-color: rgba(var(--rgb-disabled-color), 0.2)
  climate:
    state:
      - operator: template
        value: >-
          [[[ return states["sensor." + entity.entity_id.split(".")[1] +
          "_power"].state != "0"; ]]]
        styles:
          icon:
            - color: rgba(var(--rgb-orange-color),1)
          label:
            - color: rgba(var(--primary-text-color),1)
          name:
            - color: rgba(var(--primary-text-color),1)
          img_cell:
            - background-color: rgba(var(--rgb-orange-color), 0.2)
      - operator: template
        value: >-
          [[[ return states["sensor." + entity.entity_id.split(".")[1] +
          "_power"].state == "0"; ]]]
        styles:
          icon:
            - color: rgb(var(--rgb-disabled-color))
          img_cell:
            - background-color: rgba(var(--rgb-disabled-color), 0.2)
  climate_alt:
    state:
      - styles:
          icon:
            - color: rgba(var(--rgb-orange-color),1)
          label:
            - color: rgba(var(--primary-text-color),1)
          name:
            - color: rgba(var(--primary-text-color),1)
          img_cell:
            - background-color: rgba(var(--rgb-orange-color), 0.2)
          card:
            - background: var( --ha-card-background, var(--card-background-color, white) )
            - box-shadow: var(--ha-card-box-shadow, none)
        value: heat
        id: heat
      - styles:
          icon:
            - color: rgb(var(--rgb-disabled-color))
          img_cell:
            - background-color: rgba(var(--rgb-disabled-color), 0.2)
        value: 'off'
        id: 'off'
  media_player:
    state:
      - styles:
          icon:
            - color: rgba(var(--rgb-cyan-color),1)
          label:
            - color: rgba(var(--primary-text-color),1)
          name:
            - color: rgba(var(--primary-text-color),1)
          img_cell:
            - background-color: rgba(var(--rgb-cyan-color), 0.2)
          card:
            - background: var( --ha-card-background, var(--card-background-color, white) )
            - box-shadow: var(--ha-card-box-shadow, none)
        value: idle
        id: idle
      - styles:
          icon:
            - color: rgba(var(--rgb-cyan-color),1)
          label:
            - color: rgba(var(--primary-text-color),1)
          name:
            - color: rgba(var(--primary-text-color),1)
          img_cell:
            - background-color: rgba(var(--rgb-cyan-color), 0.2)
          card:
            - background: var( --ha-card-background, var(--card-background-color, white) )
            - box-shadow: var(--ha-card-box-shadow, none)
        value: playing
        id: playing
      - styles:
          icon:
            - color: rgba(var(--rgb-cyan-color),1)
          label:
            - color: rgba(var(--primary-text-color),1)
          name:
            - color: rgba(var(--primary-text-color),1)
          img_cell:
            - background-color: rgba(var(--rgb-cyan-color), 0.2)
          card:
            - background: var( --ha-card-background, var(--card-background-color, white) )
            - box-shadow: var(--ha-card-box-shadow, none)
        value: paused
        id: paused
      - styles:
          icon:
            - color: rgb(var(--rgb-disabled-color))
          img_cell:
            - background-color: rgba(var(--rgb-disabled-color), 0.2)
        value: standby
        id: standby

# The second section defines static color templates for the room card color and could also be used for the customizable card icons which I wouldn't suggest

# The colors must be configured in your theme in order to work here. If you don't want to do it you can get my custom theme which is a fork of Graphite
# https://github.com/gravelfreeman/graphite-mv/blob/main/themes/graphite.yaml
# You can find all the colors name if you scroll down to # Colors or # RGB Colors in my theme yaml file
        
  generic:
    state:
      - styles:
          icon:
            - color: rgba(var(--rgb-cyan-color),1)
          label:
            - color: rgba(var(--primary-text-color),1)
          name:
            - color: rgba(var(--primary-text-color),1)
          img_cell:
            - background-color: rgba(var(--rgb-cyan-color), 0.2)
          card:
            - background: var( --ha-card-background, var(--card-background-color, white) )
            - box-shadow: var(--ha-card-box-shadow, none)
        value: 'on'
        id: 'on'
      - styles:
          icon:
            - color: rgb(var(--rgb-disabled-color))
          img_cell:
            - background-color: rgba(var(--rgb-disabled-color), 0.2)
        value: 'off'
        id: 'off'
  light_red_no_state:
    styles:
      icon:
        - color: rgba(var(--rgb-light-red-color),1)
      label:
        - color: rgba(var(--primary-text-color),1)
      name:
        - color: rgba(var(--primary-text-color),1)
      img_cell:
        - background-color: rgba(var(--rgb-light-red-color), 0.2)
      card:
        - background: var( --ha-card-background, var(--card-background-color, white) )
        - box-shadow: var(--ha-card-box-shadow, none)
  purple_no_state:
    styles:
      icon:
        - color: rgba(var(--rgb-purple-color),1)
      label:
        - color: rgba(var(--primary-text-color),1)
      name:
        - color: rgba(var(--primary-text-color),1)
      img_cell:
        - background-color: rgba(var(--rgb-purple-color), 0.2)
      card:
        - background: var( --ha-card-background, var(--card-background-color, white) )
        - box-shadow: var(--ha-card-box-shadow, none)
  light_blue_no_state:
    styles:
      icon:
        - color: rgba(var(--rgb-light-blue-color),1)
      label:
        - color: rgba(var(--primary-text-color),1)
      name:
        - color: rgba(var(--primary-text-color),1)
      img_cell:
        - background-color: rgba(var(--rgb-light-blue-color), 0.2)
      card:
        - background: var( --ha-card-background, var(--card-background-color, white) )
        - box-shadow: var(--ha-card-box-shadow, none)
  lime_no_state:
    styles:
      icon:
        - color: rgba(var(--rgb-lime-color),1)
      label:
        - color: rgba(var(--primary-text-color),1)
      name:
        - color: rgba(var(--primary-text-color),1)
      img_cell:
        - background-color: rgba(var(--rgb-lime-color), 0.2)
      card:
        - background: var( --ha-card-background, var(--card-background-color, white) )
        - box-shadow: var(--ha-card-box-shadow, none)
  light_green_no_state:
    styles:
      icon:
        - color: rgba(var(--rgb-light-green-color),1)
      label:
        - color: rgba(var(--primary-text-color),1)
      name:
        - color: rgba(var(--primary-text-color),1)
      img_cell:
        - background-color: rgba(var(--rgb-light-green-color), 0.2)
      card:
        - background: var( --ha-card-background, var(--card-background-color, white) )
        - box-shadow: var(--ha-card-box-shadow, none)
  pink_no_state:
    styles:
      icon:
        - color: rgba(var(--rgb-pink-color),1)
      label:
        - color: rgba(var(--primary-text-color),1)
      name:
        - color: rgba(var(--primary-text-color),1)
      img_cell:
        - background-color: rgba(var(--rgb-pink-color), 0.2)
      card:
        - background: var( --ha-card-background, var(--card-background-color, white) )
        - box-shadow: var(--ha-card-box-shadow, none)
  yellow_no_state:
    styles:
      icon:
        - color: rgba(var(--rgb-yellow-color),1)
      label:
        - color: rgba(var(--primary-text-color),1)
      name:
        - color: rgba(var(--primary-text-color),1)
      img_cell:
        - background-color: rgba(var(--rgb-yellow-color), 0.2)
      card:
        - background: var( --ha-card-background, var(--card-background-color, white) )
        - box-shadow: var(--ha-card-box-shadow, none)
  amber_no_state:
    styles:
      icon:
        - color: rgba(var(--rgb-amber-color),1)
      label:
        - color: rgba(var(--primary-text-color),1)
      name:
        - color: rgba(var(--primary-text-color),1)
      img_cell:
        - background-color: rgba(var(--rgb-amber-color), 0.2)
      card:
        - background: var( --ha-card-background, var(--card-background-color, white) )
        - box-shadow: var(--ha-card-box-shadow, none)
  orange_no_state:
    styles:
      icon:
        - color: rgba(var(--rgb-orange-color),1)
      label:
        - color: rgba(var(--primary-text-color),1)
      name:
        - color: rgba(var(--primary-text-color),1)
      img_cell:
        - background-color: rgba(var(--rgb-orange-color), 0.2)
      card:
        - background: var( --ha-card-background, var(--card-background-color, white) )
        - box-shadow: var(--ha-card-box-shadow, none)
  brown_no_state:
    styles:
      icon:
        - color: rgba(var(--rgb-brown-color),1)
      label:
        - color: rgba(var(--primary-text-color),1)
      name:
        - color: rgba(var(--primary-text-color),1)
      img_cell:
        - background-color: rgba(var(--rgb-brown-color), 0.2)
      card:
        - background: var( --ha-card-background, var(--card-background-color, white) )
        - box-shadow: var(--ha-card-box-shadow, none)
  cyan_no_state:
    styles:
      icon:
        - color: rgba(var(--rgb-cyan-color),1)
      label:
        - color: rgba(var(--primary-text-color),1)
      name:
        - color: rgba(var(--primary-text-color),1)
      img_cell:
        - background-color: rgba(var(--rgb-cyan-color), 0.2)
      card:
        - background: var( --ha-card-background, var(--card-background-color, white) )
        - box-shadow: var(--ha-card-box-shadow, none)
